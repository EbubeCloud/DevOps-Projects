name: Integration Tests and Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production
  pull_request:
    branches:
      - main  # Triggers when a PR is created for main
    types:
      - closed  # Only triggers when the PR is merged into main

env:
  DEPLOY_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

jobs:
  # =======================
  # JOB 1: INTEGRATION TESTS
  # =======================
  integration_tests:
    name: Run API Tests and Code Linting
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        env:
          ADLS_CLIENT_SECRET: ${{ secrets.ADLS_CLIENT_SECRET }}
          SPEECH_SERVICE_KEY: ${{ secrets.SPEECH_SERVICE_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_EMBEDDING_API_KEY: ${{ secrets.AZURE_EMBEDDING_API_KEY }}
        run: |
          echo "Running API tests..."
          pytest api_test.py || (echo "Tests failed!" && exit 1)

      - name: Run Flake8 for style checking
        run: |
          echo "Running Flake8..."
          flake8 **/*.py --count --show-source --statistics || (echo "Flake8 failed! Fix issues before merging." && exit 1)

  # =======================
  # JOB 2: DEPLOYMENT
  # =======================
  deploy:
    name: Deploy to ${{ env.DEPLOY_ENV }}
    runs-on: ubuntu-latest
    needs: integration_tests  # Only runs if tests and linting pass
    if: github.event.pull_request.merged == true  # Ensures it runs only when PR is merged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set deployment environment
        run: echo "Deploying to $DEPLOY_ENV environment"

      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to AKS
        run: |
          az aks get-credentials --resource-group my-aks-group --name my-aks-cluster
          kubectl apply -f k8s-deployment.yml
          kubectl set image deployment/my-app my-container=myregistry.azurecr.io/my-app:latest

      - name: Post-Deployment Verification
        run: |
          kubectl get pods -n my-namespace
          echo "Deployment to $DEPLOY_ENV completed successfully!"

